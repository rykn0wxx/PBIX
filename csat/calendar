let
    currentDate = DateTime.Date(DateTime.FixedLocalNow()),
    startDate = #date(SourceMinYear, 1, 1),
    endDate = #date(Date.Year(currentDate), 12, 31),
    daysCount = Duration.Days(endDate - startDate),
    dateList = List.Dates(startDate, daysCount, #duration(1, 0, 0, 0)),
    tblFromList = Table.FromList(dateList, Splitter.SplitByNothing(), {"Date"}, null, ExtraValues.Error),
    fixDateFormat = Table.TransformColumnTypes(tblFromList,{{"Date", type date}}),
    #"== Add Year Components ==" = fixDateFormat,
    InsertedYear = Table.AddColumn(#"== Add Year Components ==", "YearNum", each Date.Year([Date]), Int64.Type),
    InsertYearName = Table.AddColumn(InsertedYear, "Year", each "CY'" & Date.ToText([Date], "yy"), type text),
    InsertYearLong = Table.AddColumn(InsertYearName, "YearLong", each "Yr " & Date.ToText([Date], "yyyy"), type text),
    #"== Add Month Components ==" = InsertYearLong,
    InsertedMonth = Table.AddColumn(#"== Add Month Components ==", "MonthNum", each Date.Month([Date]), Int64.Type),
    InsertedMonthName = Table.AddColumn(InsertedMonth, "Month", each Date.ToText([Date], "MMM"), type text),
    InsertedMonthLong = Table.AddColumn(InsertedMonthName, "MonthLong", each Date.ToText([Date], "MMMM"), type text),
    #"== Add Week Components ==" = InsertedMonthLong,
    InsertedWeek = Table.AddColumn(#"== Add Week Components ==", "WeekNum", each Date.WeekOfYear(Date.StartOfWeek([Date], Day.Monday), Day.Monday), Int64.Type),
    InsertedWeekName = Table.AddColumn(InsertedWeek, "Week", each Date.ToText(Date.StartOfWeek([Date], Day.Monday), "dd-MMM"), type text),
    InsertedWeekLong = Table.AddColumn(InsertedWeekName, "WeekLong", each Date.ToText(Date.StartOfWeek([Date], Day.Monday), "ddd, dd-MMM"), type text),
    #"== Add Day Components ==" = InsertedWeekLong,
    InsertedDay = Table.AddColumn(#"== Add Day Components ==", "DayNum", each Date.Day([Date]), Int64.Type),
    InsertedDOW = Table.AddColumn(InsertedDay, "DOW", each Date.DayOfWeek([Date], Day.Monday), Int64.Type),
    InsertDayName = Table.AddColumn(InsertedDOW, "Day", each Date.ToText([Date], "ddd"), type text),
    InsertDayLong = Table.AddColumn(InsertDayName, "DayLong", each Date.ToText([Date], "dddd"), type text),
    InsertedDayDate = Table.AddColumn(InsertDayLong, "RecordDate", each Date.ToText([Date], "dd-MMM"), type text),
    #"== Add Helper Flags ==" = InsertedDayDate,
    IsWeekendFlag = Table.AddColumn(#"== Add Helper Flags ==", "IsWeekend", each if [DOW] >= 5 then 1 else 0, Int64.Type),
    IsFutureDateFlag = Table.AddColumn(IsWeekendFlag, "IsFutureDate", each if [Date] > currentDate then 1 else 0, Int64.Type),
    YTDFlag = Table.AddColumn(IsFutureDateFlag, "Flag_YTD", each if Date.DayOfYear([Date]) <= Date.DayOfYear(currentDate) then 1 else 0, Int64.Type),
    MTDFlag = Table.AddColumn(YTDFlag, "Flag_MTD", each if Date.Day([Date]) <= Date.Day(currentDate) then 1 else 0, Int64.Type),
    #"== Add Offsets ==" = MTDFlag,
    InsertedYearOffset = Table.AddColumn(#"== Add Offsets ==", "YearOffset", each [YearNum] - Date.Year(DateTime.FixedLocalNow()), Int64.Type),
    InsertedMonthOffset = Table.AddColumn(InsertedYearOffset, "MonthOffset", each ( [YearNum] - Date.Year(DateTime.FixedLocalNow()) ) * 12 + [MonthNum] - Date.Month(DateTime.FixedLocalNow()), Int64.Type),
    InsertedWeekOffset = Table.AddColumn(InsertedMonthOffset, "WeekOffset", each (Number.From((Date.From(Date.EndOfWeek(DateTime.FixedLocalNow(), Day.Monday)) - Date.EndOfWeek([Date], Day.Monday))) * -1) / 7, Int64.Type),
    InsertedDateIndex = Table.AddColumn(InsertedWeekOffset, "date_key_index", each Number.From(Date.ToText([Date], "yyyyMMdd")), Int64.Type),
    AddTableIndex = Table.AddKey(InsertedDateIndex, { "date_key_index" }, true),
    #"== Trimmed Version of Dim Date ==" = AddTableIndex,
    #"Removed Columns" = Table.RemoveColumns(#"== Trimmed Version of Dim Date ==",{"Year", "MonthLong", "WeekLong", "DayLong"}),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Columns",{{"YearLong", "Year"}}),
    InsertMonthYear = Table.AddColumn(#"Renamed Columns", "MonthYear", each Date.ToText([Date], "MMM-yy"), type text),
    InsertMonthYearSort = Table.AddColumn(InsertMonthYear, "MonthYearSort", each Date.StartOfMonth([Date]), type date)
in
    InsertMonthYearSort